{"version":3,"sources":["pjs/particle.js"],"names":["win","Particleground","Particle","selector","options","util","createCanvas","this","set","extend","configDefault","isElem","eventElem","c","posX","random","cw","posY","ch","createDot","draw","event","resize","on","off","math","Math","abs","pi2","PI","opacity","color","speed","num","max","min","dis","lineWidth","rang","fn","prototype","version","dots","i","r","limitRandom","push","x","y","vx","vy","cxt","clearRect","globalAlpha","forEach","v","save","beginPath","arc","fillStyle","fill","restore","connectDot","requestAnimationFrame","posR","sib","sx","sy","moveTo","lineTo","strokeStyle","stroke","elemOffset","offset","handler","e","pageX","pageY","getCss","clientX","clientY","left","top","bind","pause","open","scaleX","scaleY","particle","constructor","window"],"mappings":"CACC,SAAWA,EAAKC,GACb,YAWA,SAASC,GAAUC,EAAUC,GACpBC,EAAKC,aAAcH,EAAUI,QAGlCA,KAAKC,IAAMH,EAAKI,UAAYP,EAASQ,cAAeN,GAG/CC,EAAKM,OAAQJ,KAAKC,IAAII,aACvBL,KAAKC,IAAII,UAAYL,KAAKM,GAG9BN,KAAKO,KAAOC,IAAWR,KAAKS,GAC5BT,KAAKU,KAAOF,IAAWR,KAAKW,GAE5BX,KAAKY,YACLZ,KAAKa,OACLb,KAAKc,QACLd,KAAKe,UA1BT,GAAIjB,GAAOJ,EAAeI,KACtBgB,EAAQpB,EAAeoB,MACvBE,EAAKF,EAAME,GACXC,EAAMH,EAAMG,IACZC,EAAOC,KACPX,EAASU,EAAKV,OACdY,EAAMF,EAAKE,IACXC,EAAgB,EAAVH,EAAKI,EAsBf3B,GAASQ,eAELoB,QAAS,GAETC,MAAO,KAEPC,MAAO,EAGPC,IAAK,IAELC,IAAK,IAELC,IAAK,GAELC,IAAK,IAELC,UAAW,GAEXC,KAAM,IAEN1B,UAAW,KAEXU,QAAQ,EAGZ,IAAIiB,GAAKrC,EAASsC,WACdC,QAAS,QACTtB,UAAW,WAOP,IANA,GAAIX,GAAMD,KAAKC,IACXwB,EAAQxB,EAAIwB,MACZC,EAAMzB,EAAIyB,KAAO,EAAIzB,EAAIyB,IAAM1B,KAAKS,GAAKR,EAAIyB,IAC7CS,KACAC,EAAI,EAEGV,EAAJU,EAASA,IAAK,CACjB,GAAIC,GAAIvC,EAAKwC,YAAarC,EAAI0B,IAAK1B,EAAI2B,IACvCO,GAAKI,MACDC,EAAG1C,EAAKwC,YAAatC,KAAKS,GAAK4B,EAAGA,GAClCI,EAAG3C,EAAKwC,YAAatC,KAAKW,GAAK0B,EAAGA,GAClCA,EAAGA,EACHK,GAAI5C,EAAKwC,YAAab,EAAgB,IAARA,IAAgBA,EAC9CkB,GAAI7C,EAAKwC,YAAab,EAAgB,IAARA,IAAgBA,EAC9CD,MAAOxB,KAAKwB,UAIpBxB,KAAKmC,KAAOA,GAEhBtB,KAAM,WACF,GAAIZ,GAAMD,KAAKC,IACXQ,EAAKT,KAAKS,GACVE,EAAKX,KAAKW,GACViC,EAAM5C,KAAK4C,GAEfA,GAAIC,UAAW,EAAG,EAAGpC,EAAIE,GAGzBiC,EAAId,UAAY7B,EAAI6B,UACpBc,EAAIE,YAAc7C,EAAIsB,QAEtBvB,KAAKmC,KAAKY,QAAQ,SAAUC,GACxB,GAAIX,GAAIW,EAAEX,CACVO,GAAIK,OACJL,EAAIM,YACJN,EAAIO,IAAKH,EAAER,EAAGQ,EAAEP,EAAGJ,EAAG,EAAGhB,GACzBuB,EAAIQ,UAAYJ,EAAExB,MAClBoB,EAAIS,OACJT,EAAIU,UAEJN,EAAER,GAAKQ,EAAEN,GACTM,EAAEP,GAAKO,EAAEL,EAET,IAAIH,GAAIQ,EAAER,EACNC,EAAIO,EAAEP,GAEND,EAAIH,GAAK5B,GAAe,GAAT+B,EAAIH,KACnBW,EAAEN,IAAM,KAERD,EAAIJ,GAAK1B,GAAe,GAAT8B,EAAIJ,KACnBW,EAAEL,IAAM,MAIhB3C,KAAKuD,aAAaC,yBAEtBD,WAAW,WACP,GAAIX,GAAM5C,KAAK4C,IACX3C,EAAMD,KAAKC,IACX4B,EAAM5B,EAAI4B,IACVtB,EAAOP,KAAKO,KACZG,EAAOV,KAAKU,KACZ+C,EAAOxD,EAAI8B,KACXI,EAAOnC,KAAKmC,IAwBhB,OAtBAA,GAAKY,QAAQ,SAAWC,GACpB,GAAIN,GAAKM,EAAER,EACPG,EAAKK,EAAEP,CACPrB,GAAKsB,EAAKnC,IAAUkD,GACpBrC,EAAKuB,EAAKjC,IAAU+C,GACpBtB,EAAKY,QAAQ,SAAWW,GACpB,GAAIC,GAAKD,EAAIlB,EACToB,EAAKF,EAAIjB,CACTrB,GAAKsB,EAAKiB,IAAQ9B,GAClBT,EAAKuB,EAAKiB,IAAQ/B,IAClBe,EAAIK,OACJL,EAAIM,YACJN,EAAIiB,OAAQnB,EAAIC,GAChBC,EAAIkB,OAAQH,EAAIC,GAChBhB,EAAImB,YAAcf,EAAExB,MACpBoB,EAAIoB,SACJpB,EAAIU,eAMbtD,MAEXc,MAAO,WACHd,KAAKiE,WAAanE,EAAKoE,OAAQlE,KAAKC,IAAII,WACxCL,KAAKmE,QAAU,SAAWC,GACtB,GAAI5B,GAAI4B,EAAEC,MACN5B,EAAI2B,EAAEE,KAC4C,WAAlDxE,EAAKyE,OAAQvE,KAAKC,IAAII,UAAW,cACjCmC,EAAI4B,EAAEI,QACN/B,EAAI2B,EAAEK,SAEVzE,KAAKO,KAAOiC,EAAIxC,KAAKiE,WAAWS,KAChC1E,KAAKU,KAAO+B,EAAIzC,KAAKiE,WAAWU,KAClCC,KAAM5E,MACRgB,EAAIhB,KAAKC,IAAII,UAAW,YAAaL,KAAKmE,UAKlDzE,GAAeQ,OAAQ8B,GAEvBA,EAAG6C,MAAQ,WACP/E,EAAK+E,MAAO7E,KAAM,WACdiB,EAAKjB,KAAKC,IAAII,UAAW,YAAaL,KAAKmE,YAInDnC,EAAG8C,KAAO,WACNhF,EAAKgF,KAAM9E,KAAM,WACbgB,EAAIhB,KAAKC,IAAII,UAAW,YAAaL,KAAKmE,YAIlDnC,EAAGjB,OAAS,WACRjB,EAAKiB,OAAQf,KAAM,SAAU+E,EAAQC,GACjChF,KAAKO,MAAQwE,EACb/E,KAAKU,MAAQsE,EACbhF,KAAKiE,WAAanE,EAAKoE,OAAQlE,KAAKC,IAAII,cAKhDX,EAAeuF,SAAWjD,EAAGkD,YAAcvF,GAE5CwF,OAAQzF","file":"pjs/particle.js","sourcesContent":["//particle.js\r\n+function ( win, Particleground ) {\r\n    'use strict';\r\n\r\n    var util = Particleground.util,\r\n        event = Particleground.event,\r\n        on = event.on,\r\n        off = event.off,\r\n        math = Math,\r\n        random = math.random,\r\n        abs = math.abs,\r\n        pi2 = math.PI * 2;\r\n\r\n    function Particle( selector, options ){\r\n        if( !util.createCanvas( selector, this ) ){\r\n            return;\r\n        }\r\n        this.set = util.extend( {}, Particle.configDefault, options );\r\n\r\n        //设置事件元素对象\r\n        if( !util.isElem( this.set.eventElem ) ){\r\n            this.set.eventElem = this.c;\r\n        }\r\n        //移动鼠标点X,Y坐标\r\n        this.posX = random() * this.cw;\r\n        this.posY = random() * this.ch;\r\n\r\n        this.createDot();\r\n        this.draw();\r\n        this.event();\r\n        this.resize();\r\n    }\r\n\r\n    Particle.configDefault = {\r\n        //全局透明度\r\n        opacity: .6,\r\n        //粒子颜色，null随机色，或随机给定数组的颜色\r\n        color: null,\r\n        //粒子运动速度\r\n        speed: 1,\r\n        //粒子个数，默认为容器的0.1倍\r\n        //传入[0, 1)显示容器相应倍数的值，或传入具体个数[1, +∞)\r\n        num: .12,\r\n        //粒子最大半径\r\n        max: 2.4,\r\n        //粒子最小半径\r\n        min: .6,\r\n        //连接线段最大距离，即鼠标点的方圆几里的点连接在一起\r\n        dis: 130,\r\n        //连接线段的宽度\r\n        lineWidth: .2,\r\n        //范围越大，连接的点越多\r\n        rang: 160,\r\n        //触发移动事件的元素，null为canvas，或传入原生元素对象，如document\r\n        eventElem: null,\r\n        //自适应窗口尺寸变化\r\n        resize: true\r\n    };\r\n\r\n    var fn = Particle.prototype = {\r\n        version: '1.0.0',\r\n        createDot: function(){\r\n            var set = this.set,\r\n                speed = set.speed,\r\n                num = set.num >= 1 ? set.num : this.cw * set.num,\r\n                dots = [],\r\n                i = 0;\r\n\r\n            for( ; i < num; i++ ){\r\n                var r = util.limitRandom( set.max, set.min );\r\n                dots.push({\r\n                    x: util.limitRandom( this.cw - r, r ),\r\n                    y: util.limitRandom( this.ch - r, r ),\r\n                    r: r,\r\n                    vx: util.limitRandom( speed, -speed * .5 ) || speed,\r\n                    vy: util.limitRandom( speed, -speed * .5 ) || speed,\r\n                    color: this.color()\r\n                });\r\n            }\r\n\r\n            this.dots = dots;\r\n        },\r\n        draw: function(){\r\n            var set = this.set,\r\n                cw = this.cw,\r\n                ch = this.ch,\r\n                cxt = this.cxt;\r\n\r\n            cxt.clearRect( 0, 0, cw, ch );\r\n\r\n            //当canvas宽高改变的时候，全局属性需要重新设置\r\n            cxt.lineWidth = set.lineWidth;\r\n            cxt.globalAlpha = set.opacity;\r\n\r\n            this.dots.forEach(function( v ){\r\n                var r = v.r;\r\n                cxt.save();\r\n                cxt.beginPath();\r\n                cxt.arc( v.x, v.y, r, 0, pi2 );\r\n                cxt.fillStyle = v.color;\r\n                cxt.fill();\r\n                cxt.restore();\r\n\r\n                v.x += v.vx;\r\n                v.y += v.vy;\r\n\r\n                var\tx = v.x;\r\n                var y = v.y;\r\n\r\n                if( x + r >= cw || x - r <= 0 ){\r\n                    v.vx *= -1;\r\n                }\r\n                if( y + r >= ch || y - r <= 0 ){\r\n                    v.vy *= -1;\r\n                }\r\n            });\r\n\r\n            this.connectDot().requestAnimationFrame();\r\n        },\r\n        connectDot:function(){\r\n            var cxt = this.cxt,\r\n                set = this.set,\r\n                dis = set.dis,\r\n                posX = this.posX,\r\n                posY = this.posY,\r\n                posR = set.rang,\r\n                dots = this.dots;\r\n\r\n            dots.forEach(function ( v ) {\r\n                var vx = v.x;\r\n                var vy = v.y;\r\n                if( abs( vx - posX ) <= posR &&\r\n                    abs( vy - posY ) <= posR ){\r\n                    dots.forEach(function ( sib ) {\r\n                        var sx = sib.x,\r\n                            sy = sib.y;\r\n                        if( abs( vx - sx ) <= dis &&\r\n                            abs( vy - sy ) <= dis ){\r\n                            cxt.save();\r\n                            cxt.beginPath();\r\n                            cxt.moveTo( vx, vy );\r\n                            cxt.lineTo( sx, sy );\r\n                            cxt.strokeStyle = v.color;\r\n                            cxt.stroke();\r\n                            cxt.restore();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        event: function() {\r\n            this.elemOffset = util.offset( this.set.eventElem );\r\n            this.handler = function ( e ) {\r\n                var x = e.pageX;\r\n                var y = e.pageY;\r\n                if( util.getCss( this.set.eventElem, 'position' ) === 'fixed' ){\r\n                    x = e.clientX;\r\n                    y = e.clientY;\r\n                }\r\n                this.posX = x - this.elemOffset.left;\r\n                this.posY = y - this.elemOffset.top;\r\n            }.bind( this );\r\n            on( this.set.eventElem, 'mousemove', this.handler );\r\n        }\r\n    };\r\n\r\n    //继承公共方法，如pause，open\r\n    Particleground.extend( fn );\r\n\r\n    fn.pause = function () {\r\n        util.pause( this, function(){\r\n            off( this.set.eventElem, 'mousemove', this.handler );\r\n        });\r\n    };\r\n\r\n    fn.open = function () {\r\n        util.open( this, function(){\r\n            on( this.set.eventElem, 'mousemove', this.handler );\r\n        });\r\n    };\r\n\r\n    fn.resize = function () {\r\n        util.resize( this, function( scaleX, scaleY ){\r\n            this.posX *= scaleX;\r\n            this.posY *= scaleY;\r\n            this.elemOffset = util.offset( this.set.eventElem );\r\n        });\r\n    };\r\n\r\n    //添加实例\r\n    Particleground.particle = fn.constructor = Particle;\r\n\r\n}( window, Particleground );\r\n\r\n"],"sourceRoot":"/source/"}