{"version":3,"sources":["pjs/particle.js"],"names":["win","Particleground","Particle","selector","options","util","createCanvas","this","set","extend","configDefault","eventElem","c","posX","random","cw","posY","ch","createDot","draw","event","resize","on","off","math","Math","floor","abs","pi2","PI","opacity","color","speed","num","max","min","dis","lineWidth","r","fn","prototype","version","randomColor","colorLength","length","dots","i","limitRandom","push","x","y","vx","vy","cxt","clearRect","globalAlpha","forEach","v","save","beginPath","arc","fillStyle","fill","restore","connectDot","requestAnimationFrame","posR","sib","sx","sy","moveTo","lineTo","strokeStyle","stroke","handler","e","clientX","clientY","bind","pause","open","scaleX","scaleY","particle","constructor","window"],"mappings":"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","file":"pjs/particle.js","sourcesContent":["\r\n+function ( win, Particleground ) {\r\n    'use strict';\r\n\r\n    var util = Particleground.util,\r\n        event = Particleground.event,\r\n        on = event.on,\r\n        off = event.off,\r\n        math = Math,\r\n        random = math.random,\r\n        floor = math.floor,\r\n        abs = math.abs,\r\n        pi2 = math.PI * 2;\r\n\r\n    function Particle( selector, options ){\r\n        if( !util.createCanvas( selector, this ) ){\r\n            return;\r\n        }\r\n        this.set = util.extend( {}, Particle.configDefault, options );\r\n\r\n        //设置事件元素对象\r\n        if( typeof this.set.eventElem !== 'object' ){\r\n            this.set.eventElem = this.c;\r\n        }\r\n        //移动鼠标点X,Y坐标\r\n        this.posX = random() * this.cw;\r\n        this.posY = random() * this.ch;\r\n\r\n        this.createDot();\r\n        this.draw();\r\n        this.event();\r\n        this.resize();\r\n    }\r\n\r\n    Particle.configDefault = {\r\n        //全局透明度\r\n        opacity: .6,\r\n        //粒子颜色数组，默认随机色\r\n        color: [],\r\n        //粒子运动速度\r\n        speed: 1,\r\n        //粒子个数，默认为容器的0.1倍\r\n        //传入[0, 1)显示容器相应倍数的值，或传入具体个数[1, +∞)\r\n        num: .12,\r\n        //粒子最大半径\r\n        max: 2.4,\r\n        //粒子最小半径\r\n        min: .6,\r\n        //连接线段最大距离，即鼠标点的方圆几里的点连接在一起\r\n        dis: 130,\r\n        //连接线段的宽度\r\n        lineWidth: .2,\r\n        //范围越大，连接的点越多\r\n        r: 160,\r\n        //触发移动事件的元素，false为canvas，或传入原生元素对象，如document\r\n        eventElem: false,\r\n        //自适应窗口尺寸变化\r\n        resize: true\r\n    };\r\n\r\n    var fn = Particle.prototype = {\r\n        version: '1.0.0',\r\n        createDot: function(){\r\n            var cw = this.cw,\r\n                ch = this.ch,\r\n                set = this.set,\r\n                speed = set.speed,\r\n                num = cw * set.num,\r\n                color = util.randomColor,\r\n                colorLength = set.color.length,\r\n                dots = [],\r\n                i = 0;\r\n\r\n            if( set.num >= 1 ){\r\n                num = set.num;\r\n            }\r\n\r\n            if( colorLength ){\r\n                color = function(){\r\n                    return set.color[ floor( random() * colorLength ) ];\r\n                };\r\n            }\r\n\r\n            for( ; i < num; i++ ){\r\n                var r = util.limitRandom( set.max, set.min );\r\n                dots.push({\r\n                    x: util.limitRandom( cw - r, r ),\r\n                    y: util.limitRandom( ch - r, r ),\r\n                    r: r,\r\n                    vx: util.limitRandom( speed, -speed * .5 ) || speed,\r\n                    vy: util.limitRandom( speed, -speed * .5 ) || speed,\r\n                    color: color()\r\n                });\r\n            }\r\n\r\n            this.dots = dots;\r\n        },\r\n        draw: function(){\r\n            var set = this.set,\r\n                cw = this.cw,\r\n                ch = this.ch,\r\n                cxt = this.cxt;\r\n\r\n            cxt.clearRect( 0, 0, cw, ch );\r\n\r\n            //当canvas宽高改变的时候，全局属性需要重新设置\r\n            //resize属性没有在默认配置configDefault里声明，以减小文件大小，但在文档里说明\r\n            if( set.resize ){\r\n                cxt.lineWidth = set.lineWidth;\r\n                cxt.globalAlpha = set.opacity;\r\n            }\r\n\r\n            this.dots.forEach(function( v ){\r\n                var r = v.r;\r\n                cxt.save();\r\n                cxt.beginPath();\r\n                cxt.arc( v.x, v.y, r, 0, pi2 );\r\n                cxt.fillStyle = v.color;\r\n                cxt.fill();\r\n                cxt.restore();\r\n\r\n                v.x += v.vx;\r\n                v.y += v.vy;\r\n\r\n                var\tx = v.x,\r\n                    y = v.y;\r\n\r\n                if( x + r >= cw || x - r <= 0 ){\r\n                    v.vx *= -1;\r\n                }\r\n                if( y + r >= ch || y - r <= 0 ){\r\n                    v.vy *= -1;\r\n                }\r\n            });\r\n\r\n            this.connectDot().requestAnimationFrame();\r\n        },\r\n        connectDot:function(){\r\n            var cxt = this.cxt,\r\n                set = this.set,\r\n                dis = set.dis,\r\n                posX = this.posX,\r\n                posY = this.posY,\r\n                posR = set.r,\r\n                dots = this.dots;\r\n\r\n            dots.forEach(function ( v ) {\r\n                var vx = v.x;\r\n                var vy = v.y;\r\n                if( abs( vx - posX ) <= posR &&\r\n                    abs( vy - posY ) <= posR ){\r\n                    dots.forEach(function ( sib ) {\r\n                        var sx = sib.x,\r\n                            sy = sib.y;\r\n                        if( abs( vx - sx ) <= dis &&\r\n                            abs( vy - sy ) <= dis ){\r\n                            cxt.save();\r\n                            cxt.beginPath();\r\n                            cxt.moveTo( vx, vy );\r\n                            cxt.lineTo( sx, sy );\r\n                            cxt.strokeStyle = v.color;\r\n                            cxt.stroke();\r\n                            cxt.restore();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        event: function() {\r\n            this.handler = function ( e ) {\r\n                this.posX = e.clientX;\r\n                this.posY = e.clientY;\r\n            }.bind( this );\r\n            on( this.set.eventElem, 'mousemove', this.handler );\r\n        }\r\n    };\r\n\r\n    //继承公共方法，如pause，open\r\n    Particleground.extend( fn );\r\n\r\n    fn.pause = function () {\r\n        util.pause( this, function(){\r\n            off( this.set.eventElem, 'mousemove', this.handler );\r\n        });\r\n    };\r\n\r\n    fn.open = function () {\r\n        util.open( this, function(){\r\n            on( this.set.eventElem, 'mousemove', this.handler );\r\n        });\r\n    };\r\n\r\n    fn.resize = function () {\r\n        util.resize( this, function( scaleX, scaleY ){\r\n            this.posX *= scaleX;\r\n            this.posY *= scaleY;\r\n        });\r\n    };\r\n\r\n    //添加实例\r\n    Particleground.particle = fn.constructor = Particle;\r\n\r\n}( window, Particleground );\r\n\r\n"],"sourceRoot":"/source/"}