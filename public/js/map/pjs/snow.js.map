{"version":3,"sources":["pjs/snow.js"],"names":["win","Particleground","Snow","selector","options","util","createCanvas","this","set","extend","configDefault","dots","createDot","draw","resize","random","Math","pi2","PI","opacity","color","max","min","speed","prototype","version","snowShape","self","cw","r","limitRandom","x","y","vx","vy","count","i","push","cxt","ch","clearRect","globalAlpha","forEach","v","vr","save","beginPath","arc","fillStyle","fill","restore","splice","requestAnimationFrame","snow","constructor","window"],"mappings":"CACC,SAAWA,EAAKC,GACb,YAMA,SAASC,GAAMC,EAAUC,GAChBC,EAAKC,aAAcH,EAAUI,QAGlCA,KAAKC,IAAMH,EAAKI,UAAYP,EAAKQ,cAAeN,GAEhDG,KAAKI,QACLJ,KAAKK,YACLL,KAAKM,OACLN,KAAKO,UAbT,GAAIT,GAAOJ,EAAeI,KACtBU,EAASC,KAAKD,OACdE,EAAgB,EAAVD,KAAKE,EAcfhB,GAAKQ,eAEDS,QAAS,EAETC,OAAQ,QAERC,IAAK,IAELC,IAAK,GAELC,MAAO,GAEPT,QAAQ,GAGZZ,EAAKsB,WACDC,QAAS,QACTC,UAAW,WACP,GAAIC,GAAOpB,KACPqB,EAAKD,EAAKC,GACVpB,EAAMmB,EAAKnB,IACXe,EAAQf,EAAIe,MACZM,EAAIxB,EAAKyB,YAAatB,EAAIa,IAAKb,EAAIc,IACvC,QACIS,EAAGhB,IAAWa,EACdI,GAAIH,EACJA,EAAGA,EACHI,GAAIlB,KAAY,GAChBmB,GAAIL,EAAIN,EACRH,MAAOO,EAAKP,UAGpBR,UAAW,WAIP,IAAK,GAFDuB,GAAmB,EAAXpB,IACRJ,EAAOJ,KAAKI,KACPyB,EAAI,EAAOD,EAAJC,EAAWA,IACvBzB,EAAK0B,KAAM9B,KAAKmB,cAGxBb,KAAM,WACF,GAAIc,GAAOpB,KACPC,EAAMmB,EAAKnB,IACX8B,EAAMX,EAAKW,IACXV,EAAKD,EAAKC,GACVW,EAAKZ,EAAKY,GACV5B,EAAOgB,EAAKhB,IAEhB2B,GAAIE,UAAW,EAAG,EAAGZ,EAAIW,GAGzBD,EAAIG,YAAcjC,EAAIW,QAEtBR,EAAK+B,QAAQ,SAAUC,EAAGP,GACtB,GAAIH,GAAKU,EAAEZ,EACPG,EAAKS,EAAEX,EACPY,EAAKD,EAAEd,CAEXS,GAAIO,OACJP,EAAIQ,YACJR,EAAIS,IAAKd,EAAIC,EAAIU,EAAI,EAAG3B,GACxBqB,EAAIU,UAAYL,EAAEvB,MAClBkB,EAAIW,OACJX,EAAIY,UAEJP,EAAEZ,GAAKY,EAAEV,GACTU,EAAEX,GAAKW,EAAET,GAGLnB,IAAW,KAAOA,IAAW,KAC7B4B,EAAEV,IAAM,IAIH,EAALA,GAAUA,EAAKW,EAAKhB,GACpBjB,EAAKwC,OAAQf,EAAG,GAChBzB,EAAK0B,KAAMV,EAAKD,cAEVQ,EAAKU,GAAML,GACjB5B,EAAKwC,OAAQf,EAAG,KAIpBrB,IAAW,IACXY,EAAKf,YAGTL,KAAK6C,0BAKbnD,EAAeQ,OAAQP,EAAKsB,WAE5BvB,EAAeoD,KAAOnD,EAAKsB,UAAU8B,YAAcpD,GACpDqD,OAAQtD","file":"pjs/snow.js","sourcesContent":["//snow.js\r\n+function ( win, Particleground ) {\r\n    'use strict';\r\n\r\n    var util = Particleground.util,\r\n        random = Math.random,\r\n        pi2 = Math.PI * 2;\r\n\r\n    function Snow( selector, options ){\r\n        if( !util.createCanvas( selector, this ) ){\r\n            return;\r\n        }\r\n        this.set = util.extend( {}, Snow.configDefault, options );\r\n\r\n        this.dots = [];\r\n        this.createDot();\r\n        this.draw();\r\n        this.resize();\r\n    }\r\n\r\n    Snow.configDefault = {\r\n        //全局透明度\r\n        opacity: 1,\r\n        //雪花颜色\r\n        color: ['#fff'],\r\n        //雪花最大半径\r\n        max: 6.5,\r\n        //雪花最小半径\r\n        min: .4,\r\n        //运动速度\r\n        speed: .4,\r\n        //自适应窗口尺寸变化\r\n        resize: true\r\n    };\r\n\r\n    Snow.prototype = {\r\n        version: '1.0.0',\r\n        snowShape: function(){\r\n            var self = this,\r\n                cw = self.cw,\r\n                set = self.set,\r\n                speed = set.speed,\r\n                r = util.limitRandom( set.max, set.min );\r\n            return {\r\n                x: random() * cw,\r\n                y: -r,\r\n                r: r,\r\n                vx: random() || .4,\r\n                vy: r * speed,\r\n                color: self.color()\r\n            };\r\n        },\r\n        createDot: function(){\r\n            //随机创建0-6个雪花\r\n            var count = random() * 6;\r\n            var dots = this.dots;\r\n            for( var i = 0; i < count; i++ ){\r\n                dots.push( this.snowShape() );\r\n            }\r\n        },\r\n        draw: function(){\r\n            var self = this,\r\n                set = self.set,\r\n                cxt = self.cxt,\r\n                cw = self.cw,\r\n                ch = self.ch,\r\n                dots = self.dots;\r\n\r\n            cxt.clearRect( 0, 0, cw, ch );\r\n\r\n            //当canvas宽高改变的时候，全局属性需要重新设置\r\n            cxt.globalAlpha = set.opacity;\r\n\r\n            dots.forEach(function( v, i ){\r\n                var vx = v.x;\r\n                var vy = v.y;\r\n                var vr = v.r;\r\n\r\n                cxt.save();\r\n                cxt.beginPath();\r\n                cxt.arc( vx, vy, vr, 0, pi2 );\r\n                cxt.fillStyle = v.color;\r\n                cxt.fill();\r\n                cxt.restore();\r\n\r\n                v.x += v.vx;\r\n                v.y += v.vy;\r\n\r\n                //雪花反方向\r\n                if( random() > .99 && random() > .5 ){\r\n                    v.vx *= -1;\r\n                }\r\n\r\n                //雪花从侧边出去，删除\r\n                if( vx < 0 || vx - vr > cw ){\r\n                    dots.splice( i, 1 );\r\n                    dots.push( self.snowShape() );\r\n                    //雪花从底部出去\r\n                }else if( vy - vr >= ch ){\r\n                    dots.splice( i, 1 );\r\n                }\r\n            });\r\n            //添加雪花\r\n            if( random() > .9 ){\r\n                self.createDot();\r\n            }\r\n\r\n            this.requestAnimationFrame();\r\n        }\r\n    };\r\n\r\n    //继承公共方法，如pause，open\r\n    Particleground.extend( Snow.prototype );\r\n    //添加实例\r\n    Particleground.snow = Snow.prototype.constructor = Snow;\r\n}( window, Particleground );"],"sourceRoot":"/source/"}