{"version":3,"sources":["pjs/wave.js"],"names":["win","Particleground","Wave","selector","options","util","createCanvas","this","set","extend","configDefault","dots","createDot","draw","resize","random","Math","sin","pi2","PI","opacity","color","num","lineWidth","offsetTop","crest","rippleNum","offsetLeft","speed","prototype","version","ch","lineNum","dotsNum","cw","rippleLength","t","i","line","y","push","j","x","angle","getAttr","attr","val","randomColor","self","cxt","clearRect","globalAlpha","forEach","lineDots","save","beginPath","v","lineTo","moveTo","fill","strokeStyle","stroke","closePath","restore","wave","constructor","window"],"mappings":"CACC,SAAWA,EAAKC,GACb,YAQA,SAASC,GAAMC,EAAUC,GAChBC,EAAKC,aAAcH,EAAUI,QAGlCA,KAAKC,IAAMH,EAAKI,UAAYP,EAAKQ,cAAeN,GAEhDG,KAAKI,QACLJ,KAAKK,YACLL,KAAKM,OACLN,KAAKO,UAfT,GAAIT,GAAOJ,EAAeI,KACtBU,EAASC,KAAKD,OACdE,EAAMD,KAAKC,IAEXC,GADSF,KAAKG,GAAK,IACH,EAAVH,KAAKG,GAcfjB,GAAKQ,eAEDU,QAAS,EAETC,SAGAC,IAAK,EAELC,aAEAC,UAAW,IAEXC,MAAO,IAEPC,UAAW,EAEXC,cAEAC,MAAO,EAEPd,QAAQ,GAIZZ,EAAK2B,WACDC,QAAS,QACTlB,UAAW,WACP,GAAIJ,GAAMD,KAAKC,IACXuB,EAAKxB,KAAKwB,GACVC,EAAUxB,EAAIc,IACdW,EAAU1B,KAAK2B,GACfvB,IAGJJ,MAAK4B,aAAe5B,KAAK2B,GAAK1B,EAAIkB,SAIlC,KAAK,GAFDU,GAAIlB,EAAMX,KAAK4B,aAEVE,EAAI,EAAOL,EAAJK,EAAaA,IAAK,CAE9B,GAAIC,MACAC,EAAI/B,EAAIgB,SACRe,GAAI,GAAU,GAALA,IACTA,EAAIA,EAAIR,EAAK,GAAKM,GAItB7B,EAAImB,WAAWa,KAAMzB,IAAWqB,EAEhC,KAAK,GAAIK,GAAI,EAAOR,EAAJQ,EAAaA,IACzBH,EAAKE,MACDE,EAAGD,EACHF,EAAGA,EACHI,MAAOF,EAAIL,GAInBzB,GAAK6B,KAAMF,GAIf/B,KAAKI,KAAOA,GAEhBiC,QAAS,SAAUC,EAAMR,GACrB,GAAI7B,GAAMD,KAAKC,IACXsC,EAAMtC,EAAIqC,GAAMR,EACpB,KAAKS,EAAK,CACN,OAASD,GACL,IAAK,QACDC,EAAMzC,EAAK0C,aACX,MACJ,KAAK,YACDD,EAAM,EAGdtC,EAAIqC,GAAML,KAAMM,GAEpB,MAAOA,IAEXjC,KAAM,WACF,GAAImC,GAAOzC,KACPC,EAAMD,KAAKC,IACXoB,EAAQpB,EAAIoB,MACZqB,EAAM1C,KAAK0C,IACXf,EAAK3B,KAAK2B,GACVH,EAAKxB,KAAKwB,EAEdkB,GAAIC,UAAW,EAAG,EAAGhB,EAAIH,GACzBkB,EAAIE,YAAc3C,EAAIY,QAEtBb,KAAKI,KAAKyC,QAAQ,SAAUC,EAAUhB,GAClCY,EAAIK,OACJL,EAAIM,WACJ,IAAI9B,GAAQjB,EAAIiB,KACZA,GAAQ,GAAc,GAATA,IACbA,GAAgBM,GAKpBsB,EAASD,QAAQ,SAAUI,EAAGf,GACtBA,EAEAQ,EAAIQ,OAAQD,EAAEd,EACtBjB,EAAQR,EAAKuC,EAAEb,MAAQK,EAAKJ,QAAS,aAAcP,IAAQmB,EAAEjB,GAGrDU,EAAIS,OAAQF,EAAEd,EACtBjB,EAAQR,EAAKuC,EAAEb,MAAQK,EAAKJ,QAAS,aAAcP,IAAQmB,EAAEjB,GAGzDiB,EAAEb,OAASf,IAEfqB,EAAIS,OAAQxB,EAAIH,GAChBkB,EAAIS,OAAQ,EAAG3B,GACfkB,EAAIU,KAAO,MACXV,EAAIW,YAAcZ,EAAKJ,QAAS,QAASP,GAEzCY,EAAI1B,UAAYyB,EAAKJ,QAAS,YAAaP,GAC3CY,EAAIY,SACJZ,EAAIa,YACJb,EAAIc,cAQhB9D,EAAeQ,OAAQP,EAAK2B,WAE5B5B,EAAe+D,KAAO9D,EAAK2B,UAAUoC,YAAc/D,GACpDgE,OAAQjE","file":"pjs/wave.js","sourcesContent":["//snow.js\r\n+function ( win, Particleground ) {\r\n    'use strict';\r\n\r\n    var util = Particleground.util,\r\n        random = Math.random,\r\n        sin = Math.sin,\r\n        radian = Math.PI / 180,\r\n        pi2 = Math.PI * 2;\r\n\r\n    function Wave( selector, options ){\r\n        if( !util.createCanvas( selector, this ) ){\r\n            return;\r\n        }\r\n        this.set = util.extend( {}, Wave.configDefault, options );\r\n\r\n        this.dots = [];\r\n        this.createDot();\r\n        this.draw();\r\n        this.resize();\r\n    }\r\n\r\n    Wave.configDefault = {\r\n        //全局透明度\r\n        opacity: 1,\r\n        //线条颜色\r\n        color: [],\r\n        //color: ['rgba(0, 190, 112, .9)', 'rgba(0, 190, 112, .6)', 'rgba(0, 190, 112, .3)'],\r\n        //线条个数\r\n        num: 3,\r\n        //线条宽度\r\n        lineWidth: [],\r\n        //线条中点到元素顶部的距离，(0, 1]表示容器的倍数，(1, +∞)表示具体数值\r\n        offsetTop: .75,\r\n        //波峰数值，(0, 1]表示容器的倍数，(1, +∞)表示具体数值\r\n        crest: .03,\r\n        //波纹个数，即正弦周期个数\r\n        rippleNum: 6,\r\n        //线段的横向偏移值\r\n        offsetLeft: [],\r\n        //运动速度\r\n        speed: 6,\r\n        //自适应窗口尺寸变化\r\n        resize: true\r\n    };\r\n\r\n\r\n    Wave.prototype = {\r\n        version: '1.0.0',\r\n        createDot: function(){\r\n            var set = this.set,\r\n                ch = this.ch,\r\n                lineNum = set.num,\r\n                dotsNum = this.cw,\r\n                dots = [];\r\n\r\n            //每个周期(2π)在canvas上的实际长度\r\n            this.rippleLength = this.cw / set.rippleNum;\r\n            //周期\r\n            var t = pi2 / this.rippleLength;\r\n\r\n            for( var i = 0; i < lineNum; i++ ){\r\n\r\n                var\tline = [];\r\n                var y = set.offsetTop;\r\n                if( y > 0 && y <= 1 ){\r\n                    y = y * ch + 10 * i;\r\n                }\r\n\r\n                //线段的横向偏移值\r\n                set.offsetLeft.push( random() * t );\r\n\r\n                for( var j = 0; j < dotsNum; j++ ){\r\n                    line.push({\r\n                        x: j,\r\n                        y: y,\r\n                        angle: j * t\r\n                    });\r\n                }\r\n\r\n                dots.push( line );\r\n\r\n            }\r\n\r\n            this.dots = dots;\r\n        },\r\n        getAttr: function( attr, i ){\r\n            var set = this.set;\r\n            var val = set[attr][i];\r\n            if( !val ){\r\n                switch ( attr ){\r\n                    case 'color':\r\n                        val = util.randomColor();\r\n                        break;\r\n                    case 'lineWidth':\r\n                        val = 1;\r\n                        break;\r\n                }\r\n                set[attr].push( val );\r\n            }\r\n            return val;\r\n        },\r\n        draw: function(){\r\n            var self = this,\r\n                set = this.set,\r\n                speed = set.speed,\r\n                cxt = this.cxt,\r\n                cw = this.cw,\r\n                ch = this.ch;\r\n\r\n            cxt.clearRect( 0, 0, cw, ch );\r\n            cxt.globalAlpha = set.opacity;\r\n\r\n            this.dots.forEach(function( lineDots, i ){\r\n                cxt.save();\r\n                cxt.beginPath();\r\n                var crest = set.crest;\r\n                if( crest > 0 && crest <= 1 ){\r\n                    crest = crest * ch;\r\n                }\r\n\r\n                //var rippleLength = cw / set.rippleNum / pi2;\r\n\r\n                lineDots.forEach(function( v, j ){\r\n                    if( j ){\r\n                        //y = A sin（ ωx + φ ）+ h\r\n                        cxt.lineTo( v.x,\r\n                crest * sin( v.angle + self.getAttr( 'offsetLeft', i ) ) + v.y\r\n                        );\r\n                    }else{\r\n                        cxt.moveTo( v.x,\r\n                crest * sin( v.angle + self.getAttr( 'offsetLeft', i ) ) + v.y\r\n                        );\r\n                    }\r\n                    v.angle += speed;\r\n                });\r\n                cxt.moveTo( cw, ch );\r\n                cxt.moveTo( 0, ch );\r\n                cxt.fill = 'red';\r\n                cxt.strokeStyle = self.getAttr( 'color', i );\r\n\r\n                cxt.lineWidth = self.getAttr( 'lineWidth', i );\r\n                cxt.stroke();\r\n                cxt.closePath();\r\n                cxt.restore();\r\n            });\r\n\r\n            //this.requestAnimationFrame();\r\n        }\r\n    };\r\n\r\n    //继承公共方法，如pause，open\r\n    Particleground.extend( Wave.prototype );\r\n    //添加实例\r\n    Particleground.wave = Wave.prototype.constructor = Wave;\r\n}( window, Particleground );"],"sourceRoot":"/source/"}